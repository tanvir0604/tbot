// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  status      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  trade       Trade[]
  binanceSettings       BinanceSettings[]
  tradeSettings       TradeSettings[]
}

model Trade {
  id        Int      @id @default(autoincrement())
  symbol    String
  content   Json?
  type      String   @default("LONG")
  status    Int      @db.TinyInt @default(0)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TradingPair {
  id          Int     @id @default(autoincrement())
  symbol      String
  baseAsset   String
  quoteAsset  String
  status      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BinanceSettings {
  id          Int      @id @default(autoincrement())
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int      @unique
  apiKey      String
  apiSecret   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TradeSettings {
  id              Int      @id @default(autoincrement())
  author          User     @relation(fields: [authorId], references: [id])
  authorId        Int      @unique
  leverageType    Int      @db.TinyInt @default(0)
  leverageAmount  Float
  leverageMargin  Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}